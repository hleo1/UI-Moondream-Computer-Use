{"version":3,"file":"main.js","sources":["../../node_modules/python-shell/index.js","../../activity_logger/node_modules/screenshot-desktop/lib/utils.js","../../activity_logger/node_modules/screenshot-desktop/lib/linux/index.js","../../activity_logger/node_modules/fs.realpath/old.js","../../activity_logger/node_modules/fs.realpath/index.js","../../activity_logger/node_modules/concat-map/index.js","../../activity_logger/node_modules/balanced-match/index.js","../../activity_logger/node_modules/rimraf/node_modules/brace-expansion/index.js","../../activity_logger/node_modules/rimraf/node_modules/minimatch/minimatch.js","../../activity_logger/node_modules/inherits/inherits_browser.js","../../activity_logger/node_modules/inherits/inherits.js","../../activity_logger/node_modules/path-is-absolute/index.js","../../activity_logger/node_modules/rimraf/node_modules/glob/common.js","../../activity_logger/node_modules/rimraf/node_modules/glob/sync.js","../../activity_logger/node_modules/wrappy/wrappy.js","../../activity_logger/node_modules/once/once.js","../../activity_logger/node_modules/inflight/inflight.js","../../activity_logger/node_modules/rimraf/node_modules/glob/glob.js","../../activity_logger/node_modules/rimraf/rimraf.js","../../activity_logger/node_modules/temp/node_modules/mkdirp/index.js","../../activity_logger/node_modules/temp/lib/temp.js","../../activity_logger/node_modules/screenshot-desktop/lib/darwin/index.js","../../activity_logger/node_modules/screenshot-desktop/lib/win32/index.js","../../activity_logger/node_modules/screenshot-desktop/index.js","../../activity_logger/src/index.ts","../electron/main.ts"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PythonShell = exports.NewlineTransformer = exports.PythonShellErrorWithLogs = exports.PythonShellError = void 0;\r\nconst events_1 = require(\"events\");\r\nconst child_process_1 = require(\"child_process\");\r\nconst os_1 = require(\"os\");\r\nconst path_1 = require(\"path\");\r\nconst stream_1 = require(\"stream\");\r\nconst fs_1 = require(\"fs\");\r\nconst util_1 = require(\"util\");\r\nfunction toArray(source) {\r\n    if (typeof source === 'undefined' || source === null) {\r\n        return [];\r\n    }\r\n    else if (!Array.isArray(source)) {\r\n        return [source];\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * adds arguments as properties to obj\r\n */\r\nfunction extend(obj, ...args) {\r\n    Array.prototype.slice.call(arguments, 1).forEach(function (source) {\r\n        if (source) {\r\n            for (let key in source) {\r\n                obj[key] = source[key];\r\n            }\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * gets a random int from 0-10000000000\r\n */\r\nfunction getRandomInt() {\r\n    return Math.floor(Math.random() * 10000000000);\r\n}\r\nconst execPromise = (0, util_1.promisify)(child_process_1.exec);\r\nclass PythonShellError extends Error {\r\n}\r\nexports.PythonShellError = PythonShellError;\r\nclass PythonShellErrorWithLogs extends PythonShellError {\r\n}\r\nexports.PythonShellErrorWithLogs = PythonShellErrorWithLogs;\r\n/**\r\n * Takes in a string stream and emits batches seperated by newlines\r\n */\r\nclass NewlineTransformer extends stream_1.Transform {\r\n    _transform(chunk, encoding, callback) {\r\n        let data = chunk.toString();\r\n        if (this._lastLineData)\r\n            data = this._lastLineData + data;\r\n        const lines = data.split(os_1.EOL);\r\n        this._lastLineData = lines.pop();\r\n        //@ts-ignore this works, node ignores the encoding if it's a number\r\n        lines.forEach(this.push.bind(this));\r\n        callback();\r\n    }\r\n    _flush(done) {\r\n        if (this._lastLineData)\r\n            this.push(this._lastLineData);\r\n        this._lastLineData = null;\r\n        done();\r\n    }\r\n}\r\nexports.NewlineTransformer = NewlineTransformer;\r\n/**\r\n * An interactive Python shell exchanging data through stdio\r\n * @param {string} script    The python script to execute\r\n * @param {object} [options] The launch options (also passed to child_process.spawn)\r\n * @param [stdoutSplitter] Optional. Splits stdout into chunks, defaulting to splitting into newline-seperated lines\r\n * @param [stderrSplitter] Optional. splits stderr into chunks, defaulting to splitting into newline-seperated lines\r\n * @constructor\r\n */\r\nclass PythonShell extends events_1.EventEmitter {\r\n    /**\r\n     * spawns a python process\r\n     * @param scriptPath path to script. Relative to current directory or options.scriptFolder if specified\r\n     * @param options\r\n     * @param stdoutSplitter Optional. Splits stdout into chunks, defaulting to splitting into newline-seperated lines\r\n     * @param stderrSplitter Optional. splits stderr into chunks, defaulting to splitting into newline-seperated lines\r\n     */\r\n    constructor(scriptPath, options, stdoutSplitter = null, stderrSplitter = null) {\r\n        super();\r\n        /**\r\n         * returns either pythonshell func (if val string) or custom func (if val Function)\r\n         */\r\n        function resolve(type, val) {\r\n            if (typeof val === 'string') {\r\n                // use a built-in function using its name\r\n                return PythonShell[type][val];\r\n            }\r\n            else if (typeof val === 'function') {\r\n                // use a custom function\r\n                return val;\r\n            }\r\n        }\r\n        if (scriptPath.trim().length == 0)\r\n            throw Error(\"scriptPath cannot be empty! You must give a script for python to run\");\r\n        let self = this;\r\n        let errorData = '';\r\n        events_1.EventEmitter.call(this);\r\n        options = extend({}, PythonShell.defaultOptions, options);\r\n        let pythonPath;\r\n        if (!options.pythonPath) {\r\n            pythonPath = PythonShell.defaultPythonPath;\r\n        }\r\n        else\r\n            pythonPath = options.pythonPath;\r\n        let pythonOptions = toArray(options.pythonOptions);\r\n        let scriptArgs = toArray(options.args);\r\n        this.scriptPath = (0, path_1.join)(options.scriptPath || '', scriptPath);\r\n        this.command = pythonOptions.concat(this.scriptPath, scriptArgs);\r\n        this.mode = options.mode || 'text';\r\n        this.formatter = resolve('format', options.formatter || this.mode);\r\n        this.parser = resolve('parse', options.parser || this.mode);\r\n        // We don't expect users to ever format stderr as JSON so we default to text mode\r\n        this.stderrParser = resolve('parse', options.stderrParser || 'text');\r\n        this.terminated = false;\r\n        this.childProcess = (0, child_process_1.spawn)(pythonPath, this.command, options);\r\n        ['stdout', 'stdin', 'stderr'].forEach(function (name) {\r\n            self[name] = self.childProcess[name];\r\n            self.parser && self[name] && self[name].setEncoding(options.encoding || 'utf8');\r\n        });\r\n        // Node buffers stdout&stderr in batches regardless of newline placement\r\n        // This is troublesome if you want to recieve distinct individual messages\r\n        // for example JSON parsing breaks if it recieves partial JSON\r\n        // so we use newlineTransformer to emit each batch seperated by newline\r\n        if (this.parser && this.stdout) {\r\n            if (!stdoutSplitter)\r\n                stdoutSplitter = new NewlineTransformer();\r\n            // note that setting the encoding turns the chunk into a string\r\n            stdoutSplitter.setEncoding(options.encoding || 'utf8');\r\n            this.stdout.pipe(stdoutSplitter).on('data', (chunk) => {\r\n                this.emit('message', self.parser(chunk));\r\n            });\r\n        }\r\n        // listen to stderr and emit errors for incoming data\r\n        if (this.stderrParser && this.stderr) {\r\n            if (!stderrSplitter)\r\n                stderrSplitter = new NewlineTransformer();\r\n            // note that setting the encoding turns the chunk into a string\r\n            stderrSplitter.setEncoding(options.encoding || 'utf8');\r\n            this.stderr.pipe(stderrSplitter).on('data', (chunk) => {\r\n                this.emit('stderr', self.stderrParser(chunk));\r\n            });\r\n        }\r\n        if (this.stderr) {\r\n            this.stderr.on('data', function (data) {\r\n                errorData += '' + data;\r\n            });\r\n            this.stderr.on('end', function () {\r\n                self.stderrHasEnded = true;\r\n                terminateIfNeeded();\r\n            });\r\n        }\r\n        else {\r\n            self.stderrHasEnded = true;\r\n        }\r\n        if (this.stdout) {\r\n            this.stdout.on('end', function () {\r\n                self.stdoutHasEnded = true;\r\n                terminateIfNeeded();\r\n            });\r\n        }\r\n        else {\r\n            self.stdoutHasEnded = true;\r\n        }\r\n        this.childProcess.on('error', function (err) {\r\n            self.emit('error', err);\r\n        });\r\n        this.childProcess.on('exit', function (code, signal) {\r\n            self.exitCode = code;\r\n            self.exitSignal = signal;\r\n            terminateIfNeeded();\r\n        });\r\n        function terminateIfNeeded() {\r\n            if (!self.stderrHasEnded || !self.stdoutHasEnded || (self.exitCode == null && self.exitSignal == null))\r\n                return;\r\n            let err;\r\n            if (self.exitCode && self.exitCode !== 0) {\r\n                if (errorData) {\r\n                    err = self.parseError(errorData);\r\n                }\r\n                else {\r\n                    err = new PythonShellError('process exited with code ' + self.exitCode);\r\n                }\r\n                err = extend(err, {\r\n                    executable: pythonPath,\r\n                    options: pythonOptions.length ? pythonOptions : null,\r\n                    script: self.scriptPath,\r\n                    args: scriptArgs.length ? scriptArgs : null,\r\n                    exitCode: self.exitCode\r\n                });\r\n                // do not emit error if only a callback is used\r\n                if (self.listeners('pythonError').length || !self._endCallback) {\r\n                    self.emit('pythonError', err);\r\n                }\r\n            }\r\n            self.terminated = true;\r\n            self.emit('close');\r\n            self._endCallback && self._endCallback(err, self.exitCode, self.exitSignal);\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * checks syntax without executing code\r\n     * @returns rejects promise w/ string error output if syntax failure\r\n     */\r\n    static checkSyntax(code) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const randomInt = getRandomInt();\r\n            const filePath = (0, os_1.tmpdir)() + path_1.sep + `pythonShellSyntaxCheck${randomInt}.py`;\r\n            const writeFilePromise = (0, util_1.promisify)(fs_1.writeFile);\r\n            return writeFilePromise(filePath, code).then(() => {\r\n                return this.checkSyntaxFile(filePath);\r\n            });\r\n        });\r\n    }\r\n    static getPythonPath() {\r\n        return this.defaultOptions.pythonPath ? this.defaultOptions.pythonPath : this.defaultPythonPath;\r\n    }\r\n    /**\r\n     * checks syntax without executing code\r\n     * @returns {Promise} rejects w/ stderr if syntax failure\r\n     */\r\n    static checkSyntaxFile(filePath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const pythonPath = this.getPythonPath();\r\n            let compileCommand = `${pythonPath} -m py_compile ${filePath}`;\r\n            return execPromise(compileCommand);\r\n        });\r\n    }\r\n    /**\r\n     * Runs a Python script and returns collected messages as a promise.\r\n     * If the promise is rejected, the err will probably be of type PythonShellErrorWithLogs\r\n     * @param scriptPath   The path to the script to execute\r\n     * @param options  The execution options\r\n     */\r\n    static run(scriptPath, options) {\r\n        return new Promise((resolve, reject) => {\r\n            let pyshell = new PythonShell(scriptPath, options);\r\n            let output = [];\r\n            pyshell.on('message', function (message) {\r\n                output.push(message);\r\n            }).end(function (err) {\r\n                if (err) {\r\n                    err.logs = output;\r\n                    reject(err);\r\n                }\r\n                else\r\n                    resolve(output);\r\n            });\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n     * Runs the inputted string of python code and returns collected messages as a promise. DO NOT ALLOW UNTRUSTED USER INPUT HERE!\r\n     * @param code   The python code to execute\r\n     * @param options  The execution options\r\n     * @return a promise with the output from the python script\r\n     */\r\n    static runString(code, options) {\r\n        // put code in temp file\r\n        const randomInt = getRandomInt();\r\n        const filePath = os_1.tmpdir + path_1.sep + `pythonShellFile${randomInt}.py`;\r\n        (0, fs_1.writeFileSync)(filePath, code);\r\n        return PythonShell.run(filePath, options);\r\n    }\r\n    ;\r\n    static getVersion(pythonPath) {\r\n        if (!pythonPath)\r\n            pythonPath = this.getPythonPath();\r\n        return execPromise(pythonPath + \" --version\");\r\n    }\r\n    static getVersionSync(pythonPath) {\r\n        if (!pythonPath)\r\n            pythonPath = this.getPythonPath();\r\n        return (0, child_process_1.execSync)(pythonPath + \" --version\").toString();\r\n    }\r\n    /**\r\n     * Parses an error thrown from the Python process through stderr\r\n     * @param  {string|Buffer} data The stderr contents to parse\r\n     * @return {Error} The parsed error with extended stack trace when traceback is available\r\n     */\r\n    parseError(data) {\r\n        let text = '' + data;\r\n        let error;\r\n        if (/^Traceback/.test(text)) {\r\n            // traceback data is available\r\n            let lines = text.trim().split(os_1.EOL);\r\n            let exception = lines.pop();\r\n            error = new PythonShellError(exception);\r\n            error.traceback = data;\r\n            // extend stack trace\r\n            error.stack += os_1.EOL + '    ----- Python Traceback -----' + os_1.EOL + '  ';\r\n            error.stack += lines.slice(1).join(os_1.EOL + '  ');\r\n        }\r\n        else {\r\n            // otherwise, create a simpler error with stderr contents\r\n            error = new PythonShellError(text);\r\n        }\r\n        return error;\r\n    }\r\n    ;\r\n    /**\r\n     * Sends a message to the Python shell through stdin\r\n     * Override this method to format data to be sent to the Python process\r\n     * @returns {PythonShell} The same instance for chaining calls\r\n     */\r\n    send(message) {\r\n        if (!this.stdin)\r\n            throw new Error(\"stdin not open for writing\");\r\n        let data = this.formatter ? this.formatter(message) : message;\r\n        if (this.mode !== 'binary')\r\n            data += os_1.EOL;\r\n        this.stdin.write(data);\r\n        return this;\r\n    }\r\n    ;\r\n    /**\r\n     * Closes the stdin stream. Unless python is listening for stdin in a loop\r\n     * this should cause the process to finish its work and close.\r\n     * @returns {PythonShell} The same instance for chaining calls\r\n     */\r\n    end(callback) {\r\n        if (this.childProcess.stdin) {\r\n            this.childProcess.stdin.end();\r\n        }\r\n        this._endCallback = callback;\r\n        return this;\r\n    }\r\n    ;\r\n    /**\r\n     * Sends a kill signal to the process\r\n     * @returns {PythonShell} The same instance for chaining calls\r\n     */\r\n    kill(signal) {\r\n        this.terminated = this.childProcess.kill(signal);\r\n        return this;\r\n    }\r\n    ;\r\n    /**\r\n     * Alias for kill.\r\n     * @deprecated\r\n     */\r\n    terminate(signal) {\r\n        // todo: remove this next breaking release\r\n        return this.kill(signal);\r\n    }\r\n}\r\nexports.PythonShell = PythonShell;\r\n// starting 2020 python2 is deprecated so we choose 3 as default\r\nPythonShell.defaultPythonPath = process.platform != \"win32\" ? \"python3\" : \"python\";\r\nPythonShell.defaultOptions = {}; //allow global overrides for options\r\n// built-in formatters\r\nPythonShell.format = {\r\n    text: function toText(data) {\r\n        if (!data)\r\n            return '';\r\n        else if (typeof data !== 'string')\r\n            return data.toString();\r\n        return data;\r\n    },\r\n    json: function toJson(data) {\r\n        return JSON.stringify(data);\r\n    }\r\n};\r\n//built-in parsers\r\nPythonShell.parse = {\r\n    text: function asText(data) {\r\n        return data;\r\n    },\r\n    json: function asJson(data) {\r\n        return JSON.parse(data);\r\n    }\r\n};\r\n;\r\n//# sourceMappingURL=index.js.map","const fs = require('fs')\n\nfunction unlinkP (path) {\n  return new Promise((resolve, reject) => {\n    fs.unlink(path, function (err) {\n      if (err) {\n        return reject(err)\n      }\n      return resolve()\n    })\n  })\n}\n\nfunction readFileP (path) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, function (err, img) {\n      if (err) {\n        return reject(err)\n      }\n      resolve(img)\n    })\n  })\n}\n\nfunction readAndUnlinkP (path) {\n  return new Promise((resolve, reject) => {\n    readFileP(path)\n      .then((img) => {\n        unlinkP(path)\n          .then(() => resolve(img))\n          .catch(reject)\n      })\n      .catch(reject)\n  })\n}\n\nfunction defaultAll (snapshot) {\n  return new Promise((resolve, reject) => {\n    snapshot.listDisplays()\n      .then((displays) => {\n        const snapsP = displays\n          .map(({ id }) => snapshot({ screen: id }))\n        Promise.all(snapsP)\n          .then(resolve)\n          .catch(reject)\n      })\n      .catch(reject)\n  })\n}\n\nmodule.exports = {\n  unlinkP,\n  readFileP,\n  readAndUnlinkP,\n  defaultAll\n}\n","const exec = require('child_process').exec\nconst path = require('path')\nconst defaultAll = require('../utils').defaultAll\n\nconst EXAMPLE_DISPLAYS_OUTPUT = `Screen 0: minimum 320 x 200, current 5760 x 1080, maximum 8192 x 8192\neDP-1 connected (normal left inverted right x axis y axis)\n  2560x1440     60.00 +\n  1920x1440     60.00\n  1856x1392     60.01\n  1792x1344     60.01\n  1920x1200     59.95\n  1920x1080     59.93\n  1600x1200     60.00\n  1680x1050     59.95    59.88\n  1600x1024     60.17\n  1400x1050     59.98\n  1280x1024     60.02\n  1440x900      59.89\n  1280x960      60.00\n  1360x768      59.80    59.96\n  1152x864      60.00\n  1024x768      60.04    60.00\n  960x720       60.00\n  928x696       60.05\n  896x672       60.01\n  960x600       60.00\n  960x540       59.99\n  800x600       60.00    60.32    56.25\n  840x525       60.01    59.88\n  800x512       60.17\n  700x525       59.98\n  640x512       60.02\n  720x450       59.89\n  640x480       60.00    59.94\n  680x384       59.80    59.96\n  576x432       60.06\n  512x384       60.00\n  400x300       60.32    56.34\n  320x240       60.05\nDP-1 disconnected (normal left inverted right x axis y axis)\nHDMI-1 connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm\n  1920x1080     60.00*+  50.00    50.00    59.94\n  1680x1050     59.88\n  1600x900      60.00\n  1280x1024     60.02\n  1440x900      59.90\n  1280x800      59.91\n  1280x720      60.00    50.00    59.94\n  1024x768      60.00\n  800x600       60.32\n  720x576       50.00\n  720x480       60.00    59.94\n  640x480       60.00    59.94\n  720x400       70.08\nDP-2 disconnected (normal left inverted right x axis y axis)\nHDMI-2 disconnected (normal left inverted right x axis y axis)\nDP-2-1 connected 1920x1080+3840+0 (normal left inverted right x axis y axis) 476mm x 268mm\n  1920x1080     60.00*+  50.00    50.00    59.94\n  1680x1050     59.88\n  1600x900      60.00\n  1280x1024     60.02\n  1440x900      59.90\n  1280x800      59.91\n  1280x720      60.00    50.00    59.94\n  1024x768      60.00\n  800x600       60.32\n  720x576       50.00\n  720x480       60.00    59.94\n  640x480       60.00    59.94\n  720x400       70.08\nDP-2-2 connected 1920x1080+1920+0 (normal left inverted right x axis y axis) 476mm x 268mm\n  1920x1080     60.00*+  50.00    50.00    59.94\n  1680x1050     59.88\n  1600x900      60.00\n  1280x1024     60.02\n  1440x900      59.90\n  1280x800      59.91\n  1280x720      60.00    50.00    59.94\n  1024x768      60.00\n  800x600       60.32\n  720x576       50.00\n  720x480       60.00    59.94\n  640x480       60.00    59.94\n  720x400       70.08\nDP-2-3 disconnected (normal left inverted right x axis y axis)`\n\nfunction parseDisplaysOutput (out) {\n  return out\n    .split('\\n')\n    .filter(line => line.indexOf(' connected ') > 0)\n    .filter(line => line.search(/\\dx\\d/) > 0)\n    .map((line, ix) => {\n      const parts = line.split(' ')\n      const name = parts[0]\n      const primary = parts[2] === 'primary'\n      const crop = primary ? parts[3] : parts[2]\n      const resParts = crop.split(/[x+]/)\n      const width = +resParts[0]\n      const height = +resParts[1]\n      const offsetX = +resParts[2]\n      const offsetY = +resParts[3]\n\n      return {\n        width,\n        height,\n        name,\n        id: name,\n        offsetX,\n        offsetY,\n        primary,\n        crop\n      }\n    })\n}\n\nfunction listDisplays () {\n  return new Promise((resolve, reject) => {\n    exec('xrandr --current', (err, stdout) => {\n      if (err) {\n        return reject(err)\n      }\n      return resolve(parseDisplaysOutput(stdout))\n    })\n  })\n}\n\nfunction maxBuffer (screens) {\n  let total = 0\n  screens.forEach((screen) => {\n    total += screen.height * screen.width\n  })\n  return total\n}\n\nfunction guessFiletype (filename) {\n  switch (path.extname(filename)) {\n    case '.jpg':\n    case '.jpeg':\n      return 'jpeg'\n    case '.png':\n      return 'png'\n  }\n\n  return 'jpeg'\n}\n\nfunction linuxSnapshot (options = {}) {\n  return new Promise((resolve, reject) => {\n    listDisplays().then((screens) => {\n      const screen = screens.find(options.screen ? screen => screen.id === options.screen : screen => screen.primary || screen.id === 'default') || screens[0]\n\n      const filename = options.filename ? (options.filename.replace(/\"/g, '\\\\\"')) : '-'\n      const execOptions =\n        options.filename\n          ? {}\n          : {\n              encoding: 'buffer',\n              maxBuffer: maxBuffer(screens)\n            }\n      const filetype = options.format || guessFiletype(filename)\n\n      let commandLine = ''\n      switch (options.linuxLibrary) {\n        case 'scrot': // Faster. Does not support crop.\n          commandLine = `scrot \"${filename}\" -e -z \"echo \\\\\"${filename}\\\\\"\"`\n          break\n        case 'imagemagick':\n        default:\n          commandLine = `import -silent -window root -crop ${screen.crop} -screen ${filetype}:\"${filename}\" `\n          break\n      }\n\n      exec(\n        commandLine,\n        execOptions,\n        (err, stdout) => {\n          if (err) {\n            return reject(err)\n          } else {\n            return resolve(options.filename ? path.resolve(options.filename) : stdout)\n          }\n        })\n    })\n  })\n}\n\nlinuxSnapshot.listDisplays = listDisplays\nlinuxSnapshot.parseDisplaysOutput = parseDisplaysOutput\nlinuxSnapshot.EXAMPLE_DISPLAYS_OUTPUT = EXAMPLE_DISPLAYS_OUTPUT\nlinuxSnapshot.all = () => defaultAll(linuxSnapshot)\nmodule.exports = linuxSnapshot\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,(?!,).*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n  // always treat \\ in patterns as escapes, not path separators\n  options.allowWindowsEscape = false\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert.ok(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert.ok(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar assert = require(\"assert\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\nvar glob = require(\"glob\")\nvar _0666 = parseInt('666', 8)\n\nvar defaultGlobOpts = {\n  nosort: true,\n  silent: true\n}\n\n// for EMFILE handling\nvar timeout = 0\n\nvar isWindows = (process.platform === \"win32\")\n\nfunction defaults (options) {\n  var methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(function(m) {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n  options.emfileWait = options.emfileWait || 1000\n  if (options.glob === false) {\n    options.disableGlob = true\n  }\n  options.disableGlob = options.disableGlob || false\n  options.glob = options.glob || defaultGlobOpts\n}\n\nfunction rimraf (p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  var busyTries = 0\n  var errState = null\n  var n = 0\n\n  if (options.disableGlob || !glob.hasMagic(p))\n    return afterGlob(null, [p])\n\n  options.lstat(p, function (er, stat) {\n    if (!er)\n      return afterGlob(null, [p])\n\n    glob(p, options.glob, afterGlob)\n  })\n\n  function next (er) {\n    errState = errState || er\n    if (--n === 0)\n      cb(errState)\n  }\n\n  function afterGlob (er, results) {\n    if (er)\n      return cb(er)\n\n    n = results.length\n    if (n === 0)\n      return cb()\n\n    results.forEach(function (p) {\n      rimraf_(p, options, function CB (er) {\n        if (er) {\n          if ((er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\" || er.code === \"EPERM\") &&\n              busyTries < options.maxBusyTries) {\n            busyTries ++\n            var time = busyTries * 100\n            // try again, with the same exact callback as this one.\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, time)\n          }\n\n          // this one won't happen if graceful-fs is used.\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, timeout ++)\n          }\n\n          // already gone\n          if (er.code === \"ENOENT\") er = null\n        }\n\n        timeout = 0\n        next(er)\n      })\n    })\n  }\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, function (er, st) {\n    if (er && er.code === \"ENOENT\")\n      return cb(null)\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === \"EPERM\" && isWindows)\n      fixWinEPERM(p, options, er, cb)\n\n    if (st && st.isDirectory())\n      return rmdir(p, options, er, cb)\n\n    options.unlink(p, function (er) {\n      if (er) {\n        if (er.code === \"ENOENT\")\n          return cb(null)\n        if (er.code === \"EPERM\")\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        if (er.code === \"EISDIR\")\n          return rmdir(p, options, er, cb)\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er)\n    assert(er instanceof Error)\n\n  options.chmod(p, _0666, function (er2) {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, function(er3, stats) {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  assert(p)\n  assert(options)\n  if (er)\n    assert(er instanceof Error)\n\n  try {\n    options.chmodSync(p, _0666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  try {\n    var stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, function (er, files) {\n    if (er)\n      return cb(er)\n    var n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    var errState\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  var results\n\n  if (options.disableGlob || !glob.hasMagic(p)) {\n    results = [p]\n  } else {\n    try {\n      options.lstatSync(p)\n      results = [p]\n    } catch (er) {\n      results = glob.sync(p, options.glob)\n    }\n  }\n\n  if (!results.length)\n    return\n\n  for (var i = 0; i < results.length; i++) {\n    var p = results[i]\n\n    try {\n      var st = options.lstatSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n\n      // Windows can EPERM on stat.  Life is suffering.\n      if (er.code === \"EPERM\" && isWindows)\n        fixWinEPERMSync(p, options, er)\n    }\n\n    try {\n      // sunos lets the root user unlink directories, which is... weird.\n      if (st && st.isDirectory())\n        rmdirSync(p, options, null)\n      else\n        options.unlinkSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n      if (er.code === \"EPERM\")\n        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n      if (er.code !== \"EISDIR\")\n        throw er\n\n      rmdirSync(p, options, er)\n    }\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options)\n  })\n\n  // We only end up here once we got ENOTEMPTY at least once, and\n  // at this point, we are guaranteed to have removed all the kids.\n  // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n  // try really hard to delete stuff on windows, because it has a\n  // PROFOUNDLY annoying habit of not closing handles promptly when\n  // files are deleted, resulting in spurious ENOTEMPTY errors.\n  var retries = isWindows ? 100 : 1\n  var i = 0\n  do {\n    var threw = true\n    try {\n      var ret = options.rmdirSync(p, options)\n      threw = false\n      return ret\n    } finally {\n      if (++i < retries && threw)\n        continue\n    }\n  } while (true)\n}\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777\n    }\n    if (!made) made = null;\n    \n    var cb = f || /* istanbul ignore next */ function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                /* istanbul ignore if */\n                if (path.dirname(p) === p) return cb(er);\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    /* istanbul ignore if */\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) /* istanbul ignore next */ {\n                    throw err0;\n                }\n                /* istanbul ignore if */\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","let fs   = require('fs');\nlet path = require('path');\nlet cnst = require('constants');\n\nlet os         = require('os');\nlet rimraf     = require('rimraf');\nlet mkdirp     = require('mkdirp');\nlet osTmpdir   = require('os').tmpdir();\n\nconst rimrafSync = rimraf.sync;\n\n//== helpers\n//\nlet dir = path.resolve(os.tmpdir());\n\nlet RDWR_EXCL = cnst.O_CREAT | cnst.O_TRUNC | cnst.O_RDWR | cnst.O_EXCL;\n\nlet promisify = function(callback) {\n  if (typeof callback === 'function') {\n    return [undefined, callback];\n  }\n\n  var promiseCallback;\n  var promise = new Promise(function(resolve, reject) {\n    promiseCallback = function() {\n      var args = Array.from(arguments);\n      var err = args.shift();\n\n      process.nextTick(function() {\n        if (err) {\n          reject(err);\n        } else if (args.length === 1) {\n          resolve(args[0]);\n        } else {\n          resolve(args);\n        }\n      });\n    };\n  });\n\n  return [promise, promiseCallback];\n};\n\nvar generateName = function(rawAffixes, defaultPrefix) {\n  var affixes = parseAffixes(rawAffixes, defaultPrefix);\n  var now = new Date();\n  var name = [affixes.prefix,\n              now.getFullYear(), now.getMonth(), now.getDate(),\n              '-',\n              process.pid,\n              '-',\n              (Math.random() * 0x100000000 + 1).toString(36),\n              affixes.suffix].join('');\n  return path.join(affixes.dir || dir, name);\n};\n\nvar parseAffixes = function(rawAffixes, defaultPrefix) {\n  var affixes = {prefix: null, suffix: null};\n  if(rawAffixes) {\n    switch (typeof(rawAffixes)) {\n    case 'string':\n      affixes.prefix = rawAffixes;\n      break;\n    case 'object':\n      affixes = rawAffixes;\n      break;\n    default:\n      throw new Error(\"Unknown affix declaration: \" + affixes);\n    }\n  } else {\n    affixes.prefix = defaultPrefix;\n  }\n  return affixes;\n};\n\n/* -------------------------------------------------------------------------\n * Don't forget to call track() if you want file tracking and exit handlers!\n * -------------------------------------------------------------------------\n * When any temp file or directory is created, it is added to filesToDelete\n * or dirsToDelete. The first time any temp file is created, a listener is\n * added to remove all temp files and directories at exit.\n */\nvar tracking = false;\nvar track = function(value) {\n  tracking = (value !== false);\n  return module.exports; // chainable\n};\nvar exitListenerAttached = false;\nvar filesToDelete = [];\nvar dirsToDelete = [];\n\nfunction deleteFileOnExit(filePath) {\n  if (!tracking) return false;\n  attachExitListener();\n  filesToDelete.push(filePath);\n}\n\nfunction deleteDirOnExit(dirPath) {\n  if (!tracking) return false;\n  attachExitListener();\n  dirsToDelete.push(dirPath);\n}\n\nfunction attachExitListener() {\n  if (!tracking) return false;\n  if (!exitListenerAttached) {\n    process.addListener('exit', function() {\n        try {\n            cleanupSync();\n        } catch(err) {\n            console.warn(\"Fail to clean temporary files on exit : \", err);\n            throw err;\n        }\n    });\n    exitListenerAttached = true;\n  }\n}\n\nfunction cleanupFilesSync() {\n  if (!tracking) {\n    return false;\n  }\n  var count = 0;\n  var toDelete;\n  while ((toDelete = filesToDelete.shift()) !== undefined) {\n    rimrafSync(toDelete, { maxBusyTries: 6 });\n    count++;\n  }\n  return count;\n}\n\nfunction cleanupFiles(callback) {\n  var p = promisify(callback);\n  var promise = p[0];\n  callback = p[1];\n\n  if (!tracking) {\n    callback(new Error(\"not tracking\"));\n    return promise;\n  }\n  var count = 0;\n  var left = filesToDelete.length;\n  if (!left) {\n    callback(null, count);\n    return promise;\n  }\n  var toDelete;\n  var rimrafCallback = function(err) {\n    if (!left) {\n      // Prevent processing if aborted\n      return;\n    }\n    if (err) {\n      // This shouldn't happen; pass error to callback and abort\n      // processing\n      callback(err);\n      left = 0;\n      return;\n    } else {\n      count++;\n    }\n    left--;\n    if (!left) {\n      callback(null, count);\n    }\n  };\n  while ((toDelete = filesToDelete.shift()) !== undefined) {\n    rimraf(toDelete, { maxBusyTries: 6 }, rimrafCallback);\n  }\n  return promise;\n}\n\nfunction cleanupDirsSync() {\n  if (!tracking) {\n    return false;\n  }\n  var count = 0;\n  var toDelete;\n  while ((toDelete = dirsToDelete.shift()) !== undefined) {\n    rimrafSync(toDelete, { maxBusyTries: 6 });\n    count++;\n  }\n  return count;\n}\n\nfunction cleanupDirs(callback) {\n  var p = promisify(callback);\n  var promise = p[0];\n  callback = p[1];\n\n  if (!tracking) {\n    callback(new Error(\"not tracking\"));\n    return promise;\n  }\n  var count = 0;\n  var left = dirsToDelete.length;\n  if (!left) {\n    callback(null, count);\n    return promise;\n  }\n  var toDelete;\n  var rimrafCallback = function (err) {\n    if (!left) {\n      // Prevent processing if aborted\n      return;\n    }\n    if (err) {\n      // rimraf handles most \"normal\" errors; pass the error to the\n      // callback and abort processing\n      callback(err, count);\n      left = 0;\n      return;\n    } else {\n      count++;\n    }\n    left--;\n    if (!left) {\n      callback(null, count);\n    }\n  };\n  while ((toDelete = dirsToDelete.shift()) !== undefined) {\n    rimraf(toDelete, { maxBusyTries: 6 }, rimrafCallback);\n  }\n  return promise;\n}\n\nfunction cleanupSync() {\n  if (!tracking) {\n    return false;\n  }\n  var fileCount = cleanupFilesSync();\n  var dirCount  = cleanupDirsSync();\n  return {files: fileCount, dirs: dirCount};\n}\n\nfunction cleanup(callback) {\n  var p = promisify(callback);\n  var promise = p[0];\n  callback = p[1];\n\n  if (!tracking) {\n    callback(new Error(\"not tracking\"));\n    return promise;\n  }\n  cleanupFiles(function(fileErr, fileCount) {\n    if (fileErr) {\n      callback(fileErr, {files: fileCount});\n    } else {\n      cleanupDirs(function(dirErr, dirCount) {\n        callback(dirErr, {files: fileCount, dirs: dirCount});\n      });\n    }\n  });\n  return promise;\n}\n\n//== directories\n//\nconst mkdir = (affixes, callback) => {\n  const p = promisify(callback);\n  const promise = p[0];\n  callback = p[1];\n\n  let dirPath = generateName(affixes, 'd-');\n  mkdirp(dirPath, 0o700, (err) => {\n    if (!err) {\n      deleteDirOnExit(dirPath);\n    }\n    callback(err, dirPath);\n  });\n  return promise;\n}\n\nconst mkdirSync = (affixes) => {\n  let dirPath = generateName(affixes, 'd-');\n  mkdirp.sync(dirPath, 0o700);\n  deleteDirOnExit(dirPath);\n  return dirPath;\n}\n\n//== files\n//\nconst open = (affixes, callback) => {\n  const p = promisify(callback);\n  const promise = p[0];\n  callback = p[1];\n\n  const path = generateName(affixes, 'f-');\n  fs.open(path, RDWR_EXCL, 0o600, (err, fd) => {\n    if (!err) {\n      deleteFileOnExit(path);\n    }\n    callback(err, { path, fd });\n  });\n  return promise;\n}\n\nconst openSync = (affixes) => {\n  const path = generateName(affixes, 'f-');\n  let fd = fs.openSync(path, RDWR_EXCL, 0o600);\n  deleteFileOnExit(path);\n  return { path, fd };\n}\n\nconst createWriteStream =  (affixes) => {\n  const path = generateName(affixes, 's-');\n  let stream = fs.createWriteStream(path, { flags: RDWR_EXCL, mode: 0o600 });\n  deleteFileOnExit(path);\n  return stream;\n}\n\n//== settings\n//\nexports.dir = dir;\nexports.track = track;\n\n//== functions\n//\nexports.mkdir = mkdir;\nexports.mkdirSync = mkdirSync;\nexports.open = open;\nexports.openSync = openSync;\nexports.path = generateName;\nexports.cleanup = cleanup;\nexports.cleanupSync = cleanupSync;\nexports.createWriteStream = createWriteStream;\n","const exec = require('child_process').exec\nconst temp = require('temp')\nconst fs = require('fs')\nconst utils = require('../utils')\nconst path = require('path')\n\nconst { unlinkP, readAndUnlinkP } = utils\n\nfunction darwinSnapshot (options = {}) {\n  const performScreenCapture = displays => new Promise((resolve, reject) => {\n    // validate displayId\n    const totalDisplays = displays.length\n    if (totalDisplays === 0) {\n      return reject(new Error('No displays detected try dropping screen option'))\n    }\n    const maxDisplayId = totalDisplays - 1\n    const displayId = options.screen || 0\n    if (!Number.isInteger(displayId) || displayId < 0 || displayId > maxDisplayId) {\n      const validChoiceMsg = (maxDisplayId === 0) ? '(valid choice is 0 or drop screen option altogether)' : `(valid choice is an integer between 0 and ${maxDisplayId})`\n      return reject(new Error(`Invalid choice of displayId: ${displayId} ${validChoiceMsg}`))\n    }\n\n    const format = options.format || 'jpg'\n    let filename\n    let suffix\n    if (options.filename) {\n      const ix = options.filename.lastIndexOf('.')\n      suffix = ix >= 0 ? options.filename.slice(ix) : `.${format}`\n      filename = '\"' + options.filename.replace(/\"/g, '\\\\\"') + '\"'\n    } else {\n      suffix = `.${format}`\n    }\n\n    const tmpPaths = Array(displayId + 1)\n      .fill(null)\n      .map(() => temp.path({ suffix }))\n\n    let pathsToUse = []\n    if (options.filename) {\n      tmpPaths[displayId] = filename\n    }\n    pathsToUse = tmpPaths.slice(0, displayId + 1)\n\n    exec('screencapture' + ' -x -t ' + format + ' ' + pathsToUse.join(' '),\n      function (err, stdOut) {\n        if (err) {\n          return reject(err)\n        } else if (options.filename) {\n          resolve(path.resolve(options.filename))\n        } else {\n          fs.readFile(tmpPaths[displayId], function (err, img) {\n            if (err) {\n              return reject(err)\n            }\n            Promise.all(pathsToUse.map(unlinkP))\n              .then(() => resolve(img))\n              .catch((err) => reject(err))\n          })\n        }\n      })\n  })\n\n  return listDisplays().then((displays) => { return performScreenCapture(displays) })\n}\n\nconst EXAMPLE_DISPLAYS_OUTPUT = `\nGraphics/Displays:\n\n    Intel Iris:\n\n      Chipset Model: Intel Iris\n      Type: GPU\n      Bus: Built-In\n      VRAM (Dynamic, Max): 1536 MB\n      Vendor: Intel (0x8086)\n      Device ID: 0x0a2e\n      Revision ID: 0x0009\n      Displays:\n        Color LCD:\n          Display Type: Retina LCD\n          Resolution: 2560 x 1600 Retina\n          Retina: Yes\n          Pixel Depth: 32-Bit Color (ARGB8888)\n          Main Display: Yes\n          Mirror: Off\n          Online: Yes\n          Built-In: Yes\n        HP 22cwa:\n          Resolution: 1920 x 1080 @ 60Hz (1080p)\n          Pixel Depth: 32-Bit Color (ARGB8888)\n          Display Serial Number: 6CM7201231\n          Mirror: Off\n          Online: Yes\n          Rotation: Supported\n          Television: Yes\n`\n\nfunction extractEntries (output) {\n  const entries = []\n\n  const entryPattern = /(\\s*)(.*?):(.*)\\n/g\n  let match\n  while ((match = entryPattern.exec(output)) !== null) {\n    entries.push({\n      indent: match[1].length,\n      key: match[2].trim(),\n      value: match[3].trim()\n    })\n  }\n\n  return entries\n}\n\nfunction makeSubtree (currIndent, subtree, entries) {\n  let entry\n  while ((entry = entries.shift())) {\n    if (entry.value === '') {\n      if (currIndent < entry.indent) {\n        while (entry.key in subtree) {\n          entry.key += '_1'\n        }\n        subtree[entry.key] = {}\n        makeSubtree(entry.indent, subtree[entry.key], entries)\n      } else {\n        entries.unshift(entry)\n        return\n      }\n    } else {\n      while (entry.key in subtree) {\n        entry.key += '_1'\n      }\n      subtree[entry.key] = entry.value\n    }\n  }\n}\n\nfunction movePrimaryToHead (displays) {\n  const primary = displays.filter(e => e.primary)\n  const notPrimary = displays.filter(e => !e.primary)\n  return [...primary, ...notPrimary]\n}\n\nfunction addId (displays) {\n  let id = 0\n  return displays\n    .map(display => {\n      return Object.assign({}, display, { id: id++ })\n    })\n}\n\nfunction parseDisplaysOutput (output) {\n  const tree = {}\n  makeSubtree(-1, tree, extractEntries(output))\n\n  if (!tree['Graphics/Displays']) {\n    return []\n  }\n\n  const firstGpuKeys = Object.keys(tree['Graphics/Displays'])\n  if (!firstGpuKeys || firstGpuKeys.length <= 0) {\n    return []\n  }\n\n  let displayinfos = []\n\n  firstGpuKeys.forEach(gpukey => {\n    const gpu = tree['Graphics/Displays'][gpukey]\n    if (gpu.Displays) {\n      const temp = Object.entries(gpu.Displays)\n        .map(([name, props]) => {\n          const primary = props['Main Display'] === 'Yes'\n          return { name, primary }\n        })\n      displayinfos = displayinfos.concat(temp)\n    }\n  })\n\n  return addId(movePrimaryToHead(displayinfos))\n}\n\nfunction listDisplays () {\n  return new Promise((resolve, reject) => {\n    exec(\n      'system_profiler SPDisplaysDataType',\n      (err, stdout) => {\n        if (err) {\n          return reject(err)\n        }\n        resolve(parseDisplaysOutput(stdout))\n      })\n  })\n}\n\nfunction all () {\n  return new Promise((resolve, reject) => {\n    listDisplays()\n      .then((displays) => {\n        const tmpPaths = displays.map(() => temp.path({ suffix: '.jpg' }))\n        exec('screencapture -x -t jpg ' + tmpPaths.join(' '), function (err, stdOut) {\n          if (err) {\n            return reject(err)\n          } else {\n            Promise.all(tmpPaths.map(readAndUnlinkP))\n              .then(resolve)\n              .catch(reject)\n          }\n        })\n      })\n  })\n}\n\ndarwinSnapshot.listDisplays = listDisplays\ndarwinSnapshot.all = all\ndarwinSnapshot.parseDisplaysOutput = parseDisplaysOutput\ndarwinSnapshot.EXAMPLE_DISPLAYS_OUTPUT = EXAMPLE_DISPLAYS_OUTPUT\n\nmodule.exports = darwinSnapshot\n","const exec = require('child_process').exec\nconst temp = require('temp')\nconst path = require('path')\nconst utils = require('../utils')\nconst fs = require('fs')\nconst os = require('os')\n\nconst {\n  readAndUnlinkP,\n  defaultAll\n} = utils\n\nfunction copyToTemp () {\n  const tmpBat = path.join(os.tmpdir(), 'screenCapture', 'screenCapture_1.3.2.bat')\n  const tmpManifest = path.join(os.tmpdir(), 'screenCapture', 'app.manifest')\n  const includeBat = path.join(__dirname, 'screenCapture_1.3.2.bat').replace('app.asar', 'app.asar.unpacked')\n  const includeManifest = path.join(__dirname, 'app.manifest').replace('app.asar', 'app.asar.unpacked')\n  if (!fs.existsSync(tmpBat)) {\n    const tmpDir = path.join(os.tmpdir(), 'screenCapture')\n    if (!fs.existsSync(tmpDir)) {\n      fs.mkdirSync(tmpDir)\n    }\n    const sourceData = {\n      bat: fs.readFileSync(includeBat),\n      manifest: fs.readFileSync(includeManifest)\n    }\n    fs.writeFileSync(tmpBat, sourceData.bat)\n    fs.writeFileSync(tmpManifest, sourceData.manifest)\n  }\n  return tmpBat\n}\n\nfunction windowsSnapshot (options = {}) {\n  return new Promise((resolve, reject) => {\n    const displayName = options.screen\n    const format = options.format || 'jpg'\n    const tmpPath = temp.path({\n      suffix: `.${format}`\n    })\n    const imgPath = path.resolve(options.filename || tmpPath)\n\n    const displayChoice = displayName ? ` /d \"${displayName}\"` : ''\n\n    const tmpBat = copyToTemp()\n\n    exec('\"' + tmpBat + '\" \"' + imgPath + '\" ' + displayChoice, {\n      cwd: path.join(os.tmpdir(), 'screenCapture'),\n      windowsHide: true\n    }, (err, stdout) => {\n      if (err) {\n        return reject(err)\n      } else {\n        if (options.filename) {\n          resolve(imgPath)\n        } else {\n          readAndUnlinkP(tmpPath)\n            .then(resolve)\n            .catch(reject)\n        }\n      }\n    })\n  })\n}\n\nconst EXAMPLE_DISPLAYS_OUTPUT = '\\r\\nC:\\\\Users\\\\devetry\\\\screenshot-desktop\\\\lib\\\\win32>//  2>nul  || \\r\\n\\\\.\\\\DISPLAY1;0;1920;1080;0\\r\\n\\\\.\\\\DISPLAY2;0;3840;1080;1920\\r\\n'\n\nfunction parseDisplaysOutput (output) {\n  const displaysStartPattern = /2>nul {2}\\|\\| /\n  const {\n    0: match,\n    index\n  } = displaysStartPattern.exec(output)\n  return output.slice(index + match.length)\n    .split('\\n')\n    .map(s => s.replace(/[\\n\\r]/g, ''))\n    .map(s => s.match(/(.*?);(.?\\d+);(.?\\d+);(.?\\d+);(.?\\d+);(.?\\d*[\\.,]?\\d+)/)) // eslint-disable-line\n    .filter(s => s)\n    .map(m => ({\n      id: m[1],\n      name: m[1],\n      top: +m[2],\n      right: +m[3],\n      bottom: +m[4],\n      left: +m[5],\n      dpiScale: +m[6].replace(',', '.')\n    }))\n    .map(d => Object.assign(d, {\n      height: d.bottom - d.top,\n      width: d.right - d.left\n    }))\n}\n\nfunction listDisplays () {\n  return new Promise((resolve, reject) => {\n    const tmpBat = copyToTemp()\n    exec(\n      '\"' + tmpBat + '\" /list', {\n        cwd: path.join(os.tmpdir(), 'screenCapture')\n      },\n      (err, stdout) => {\n        if (err) {\n          return reject(err)\n        }\n        resolve(parseDisplaysOutput(stdout))\n      })\n  })\n}\n\nwindowsSnapshot.listDisplays = listDisplays\nwindowsSnapshot.availableDisplays = listDisplays\nwindowsSnapshot.parseDisplaysOutput = parseDisplaysOutput\nwindowsSnapshot.EXAMPLE_DISPLAYS_OUTPUT = EXAMPLE_DISPLAYS_OUTPUT\nwindowsSnapshot.all = () => defaultAll(windowsSnapshot)\n\nmodule.exports = windowsSnapshot\n","'strict mode'\n\nif (process.platform === 'linux') {\n  module.exports = require('./lib/linux')\n} else if (process.platform === 'darwin') {\n  module.exports = require('./lib/darwin')\n} else if (process.platform === 'win32') {\n  module.exports = require('./lib/win32')\n} else {\n  module.exports = function unSupported () {\n    return Promise.reject(new Error('Currently unsupported platform. Pull requests welcome!'))\n  }\n}\n","import { GlobalKeyboardListener } from 'node-global-key-listener';\nimport mouseEvents from 'global-mouse-events';\nimport screenshot from 'screenshot-desktop';\nimport sharp from 'sharp';\nimport path from 'path';\nimport fs from 'fs';\nimport { EventEmitter } from 'events';\n\nconst clicksVicinityDir = path.join(process.cwd(), 'clicks_vicinity');\nconst screenshotFullDir = path.join(process.cwd(), 'screenshot_full');\n\ninterface Display {\n    id: number;\n    isPrimary: boolean;\n    width: number;\n    height: number;\n}\n\n// JSON Schemas for actions\ninterface ClickAction {\n    action: 'leftClick' | 'rightClick';\n    pos: { x: number; y: number };\n    time: number;\n}\n\ninterface KeyPressAction {\n    action: 'keyPress';\n    key: string;\n    time: number;\n}\n\ninterface ComboKeyPressAction {\n    action: 'Combo Key';\n    combo: string;\n    time: number;\n}\n\ninterface MoveMouseAction {\n    action: 'moveMouse';\n    time: number;\n    initial_pos: { x: number; y: number };\n    final_pos: { x: number; y: number };\n}\n\ntype Action = ClickAction | KeyPressAction | ComboKeyPressAction | MoveMouseAction;\n\n\nexport class ActivityLogger extends EventEmitter {\n    private logs: Action[] = [];\n    private keyboardListener: GlobalKeyboardListener | null = null;\n    private mouseMoveTimeout: NodeJS.Timeout | null = null;\n    private lastScreenshotBuffer: Buffer | null = null;\n    private isTakingScreenshot = false;\n    private isLogging = false;\n\n    private primaryDisplay: Display | null = null;\n    private screenWidth = 0;\n    private screenHeight = 0;\n\n    private startMousePosition: { x: number, y: number } | null = null;\n    private endMousePosition: { x: number, y: number } | null = null;\n    \n    constructor() {\n        super();\n        if (!fs.existsSync(clicksVicinityDir)) fs.mkdirSync(clicksVicinityDir);\n        if (!fs.existsSync(screenshotFullDir)) fs.mkdirSync(screenshotFullDir);\n    }\n\n    public async startLog() {\n        if (this.isLogging) {\n            console.log(\"Logger is already running.\");\n            return;\n        }\n\n        const displays: Display[] = await screenshot.listDisplays();\n        this.primaryDisplay = displays.find(d => d.isPrimary) || displays[0];\n        if (!this.primaryDisplay) {\n            throw new Error(\"No primary display found.\");\n        }\n        this.screenWidth = this.primaryDisplay.width;\n        this.screenHeight = this.primaryDisplay.height;\n\n        this.isLogging = true;\n        this.keyboardListener = new GlobalKeyboardListener();\n\n        this.setupKeyboardListener();\n        this.setupMouseListeners();\n    }\n\n    public endLog() {\n        if (!this.isLogging) {\n            console.log(\"Logger is not running.\");\n            return;\n        }\n\n        this.endAndLogMouseMovement();\n        \n        this.keyboardListener?.kill();\n        mouseEvents.removeAllListeners();\n        this.isLogging = false;\n        console.log(\"Activity logger stopped.\");\n    }\n\n    public saveLog(filePath: string) {\n        fs.writeFileSync(filePath, JSON.stringify(this.logs, null, 2));\n    }\n\n    private log(action: Action) {\n        if (this.isLogging) {\n            console.log(action);\n            this.logs.push(action);\n            this.emit('log', action);\n        }\n    }\n    \n    private endAndLogMouseMovement() {\n        if (this.mouseMoveTimeout) {\n            clearTimeout(this.mouseMoveTimeout);\n            this.mouseMoveTimeout = null;\n\n            if (this.startMousePosition && this.endMousePosition && (this.startMousePosition.x !== this.endMousePosition.x || this.startMousePosition.y !== this.endMousePosition.y)) {\n                this.log({\n                    action: 'moveMouse',\n                    time: Date.now(),\n                    initial_pos: this.startMousePosition,\n                    final_pos: this.endMousePosition\n                });\n            }\n            this.startMousePosition = null;\n            this.endMousePosition = null;\n        }\n    }\n\n    private setupKeyboardListener() {\n        let ctrlDown = false;\n        let ctrlUsedInCombo = false;\n        const comboKeys = new Set<string>();\n\n        this.keyboardListener?.addListener((e: { state: \"DOWN\" | \"UP\", name?: string }) => {\n            if (!this.isLogging) return;\n            this.endAndLogMouseMovement();\n\n            if (e.state === \"DOWN\") {\n                if (e.name === 'LEFT CTRL' || e.name === 'RIGHT CTRL') {\n                    if (!ctrlDown) {\n                        ctrlDown = true;\n                        ctrlUsedInCombo = false;\n                        comboKeys.clear();\n                    }\n                } else if (ctrlDown && e.name && !comboKeys.has(e.name)) {\n                    this.log({\n                        action: 'Combo Key',\n                        combo: `Ctrl + ${e.name}`,\n                        time: Date.now()\n                    });\n                    ctrlUsedInCombo = true;\n                    comboKeys.add(e.name);\n                }\n            } else if (e.state === \"UP\") {\n                if (e.name === 'LEFT CTRL' || e.name === 'RIGHT CTRL') {\n                    if (ctrlDown && !ctrlUsedInCombo) {\n                        this.log({ action: 'keyPress', key: 'Ctrl', time: Date.now() });\n                    }\n                    ctrlDown = false;\n                    ctrlUsedInCombo = false;\n                    comboKeys.clear();\n                } else if (!ctrlDown && e.name && e.name !== 'MOUSE LEFT' && e.name !== 'MOUSE RIGHT') {\n                    this.log({ action: 'keyPress', key: e.name, time: Date.now() });\n                }\n            }\n        });\n    }\n\n    private setupMouseListeners() {\n        mouseEvents.on('mousemove', (event: { x: number, y: number }) => {\n            if (!this.isLogging) return;\n\n            if (!this.isTakingScreenshot) {\n                this.isTakingScreenshot = true;\n                screenshot({ format: 'png', screen: this.primaryDisplay!.id })\n                    .then((buffer: Buffer) => {\n                        this.lastScreenshotBuffer = buffer;\n                        setTimeout(() => { this.isTakingScreenshot = false; }, 100);\n                    })\n                    .catch((err: Error) => {\n                        console.error(\"Failed to capture continuous screenshot:\", err);\n                        this.isTakingScreenshot = false;\n                    });\n            }\n\n            const normalizedX = Math.max(0, event.x) / this.screenWidth;\n            const normalizedY = Math.max(0, event.y) / this.screenHeight;\n\n            if (!this.startMousePosition) this.startMousePosition = { x: normalizedX, y: normalizedY };\n            this.endMousePosition = { x: normalizedX, y: normalizedY };\n\n            if (this.mouseMoveTimeout) clearTimeout(this.mouseMoveTimeout);\n            this.mouseMoveTimeout = setTimeout(() => this.endAndLogMouseMovement(), 1000);\n        });\n\n        mouseEvents.on('mousedown', async (event: { x: number, y: number, button: number }) => {\n            if (!this.isLogging) return;\n            this.endAndLogMouseMovement();\n\n            const clickX = event.x;\n            const clickY = event.y;\n\n            if (event.button === 1 || event.button === 2) {\n                const clickType = event.button === 1 ? 'leftClick' : 'rightClick';\n                const timestamp = Date.now();\n                \n                this.log({\n                    action: clickType,\n                    pos: {\n                        x: Math.max(0, clickX) / this.screenWidth,\n                        y: Math.max(0, clickY) / this.screenHeight\n                    },\n                    time: timestamp\n                });\n                \n                const vicinityPath = path.join(clicksVicinityDir, `vicinity-${timestamp}.png`);\n                const fullScreenshotPath = path.join(screenshotFullDir, `full-${timestamp}.png`);\n\n                try {\n                    const imgBuffer = this.lastScreenshotBuffer ?? await screenshot({ format: 'png', screen: this.primaryDisplay!.id });\n\n                    const left = Math.max(0, clickX - 200);\n                    const top = Math.max(0, clickY - 100);\n                    const width = Math.min(clickX + 200, this.screenWidth) - left;\n                    const height = Math.min(clickY + 100, this.screenHeight) - top;\n\n                    await sharp(imgBuffer).extract({ left, top, width, height }).toFile(vicinityPath);\n\n                    const borderSvg = `<svg width=\"${this.screenWidth}\" height=\"${this.screenHeight}\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"${left}\" y=\"${top}\" width=\"${width}\" height=\"${height}\" stroke=\"red\" stroke-width=\"5\" fill=\"none\" /></svg>`;\n                    await sharp(imgBuffer).composite([{ input: Buffer.from(borderSvg) }]).toFile(fullScreenshotPath);\n\n                } catch (error) {\n                    console.error(`Failed to process screenshot for ${clickType}:`, error);\n                }\n            }\n        });\n    }\n} \n\n\n","import { app, BrowserWindow, ipcMain, globalShortcut, screen } from 'electron'\nimport { createRequire } from 'node:module'\nimport { fileURLToPath } from 'node:url'\nimport path from 'node:path'\nimport fs from 'node:fs'\nimport { PythonShell } from 'python-shell'\nimport { ActivityLogger } from '../../activity_logger/src/index';\n\nconst require = createRequire(import.meta.url)\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\n// The built directory structure\n//\n// ├─┬─┬ dist\n// │ │ └── index.html\n// │ │\n// │ ├─┬ dist-electron\n// │ │ ├── main.js\n// │ │ └── preload.mjs\n// │\nprocess.env.APP_ROOT = path.join(__dirname, '..')\n\n// 🚧 Use ['ENV_NAME'] avoid vite:define plugin - Vite@2.x\nexport const VITE_DEV_SERVER_URL = process.env['VITE_DEV_SERVER_URL']\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, 'dist-electron')\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, 'dist')\n\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL ? path.join(process.env.APP_ROOT, 'public') : RENDERER_DIST\n\nlet win: BrowserWindow | null\nlet pyShell: PythonShell | null = null;\nlet isRunning = false\nlet mainMenu: BrowserWindow | null\nlet plusMenu: BrowserWindow | null\nlet selectedProgram = 'grubhub_order.py';\nlet activityLogger: ActivityLogger | null = null;\n\nipcMain.on('close-main-menu', () => {\n  mainMenu?.close()\n})\n\nipcMain.on('select-program', (event, file) => {\n  selectedProgram = file\n  win?.webContents.send('program-selected', file)\n  mainMenu?.close()\n})\n\nipcMain.on('open-plus-window', () => {\n  togglePlusWindow()\n  mainMenu?.close()\n})\n\nfunction togglePlusWindow() {\n  if (plusMenu) {\n    plusMenu.close()\n    return\n  }\n  createPlusWindow()\n}\n\nfunction createPlusWindow() {\n  const primaryDisplay = screen.getPrimaryDisplay()\n  const { width, height } = primaryDisplay.size\n\n  plusMenu = new BrowserWindow({\n    width: Math.round(width * 0.2),\n    height: Math.round(height * 0.7),\n    x: 0,\n    y: Math.round(height * 0.15),\n    frame: false,\n    transparent: true,\n    alwaysOnTop: true,\n    resizable: false,\n    type: 'toolbar',\n    webPreferences: {\n      preload: path.join(__dirname, 'preload.mjs'),\n    },\n  })\n\n  if (VITE_DEV_SERVER_URL) {\n    plusMenu.loadURL(`${VITE_DEV_SERVER_URL}plus.html`)\n  } else {\n    plusMenu.loadFile(path.join(RENDERER_DIST, 'plus.html'))\n  }\n\n  activityLogger = new ActivityLogger();\n  activityLogger.on('log', (action) => {\n    plusMenu?.webContents.send('activity-log', action);\n  });\n\n  // plusMenu.webContents.openDevTools()\n\n  plusMenu.setIgnoreMouseEvents(true, { forward: true })\n\n  plusMenu.on('blur', () => {\n    plusMenu?.setAlwaysOnTop(true, 'screen-saver')\n  })\n\n  plusMenu.on('closed', () => {\n    plusMenu = null\n  })\n}\n\nipcMain.on('start-activity-log', () => {\n  activityLogger?.startLog();\n});\n\nipcMain.on('stop-activity-log', () => {\n  activityLogger?.endLog();\n});\n\nfunction createMainMenu() {\n  const primaryDisplay = screen.getPrimaryDisplay()\n  const { width, height } = primaryDisplay.size\n\n  mainMenu = new BrowserWindow({\n    width: Math.round(width * 0.5),\n    height: Math.round(height * 0.4),\n    frame: false,\n    transparent: true,\n    webPreferences: {\n      preload: path.join(__dirname, 'preload.mjs'),\n    },\n  })\n\n  if (VITE_DEV_SERVER_URL) {\n    mainMenu.loadURL(`${VITE_DEV_SERVER_URL}main-menu.html`)\n  } else {\n    mainMenu.loadFile(path.join(RENDERER_DIST, 'main-menu.html'))\n  }\n\n  mainMenu.webContents.on('did-finish-load', () => {\n    if (!process.env.APP_ROOT) {\n      console.error('APP_ROOT is not defined');\n      return;\n    }\n    const scriptPath = path.join(process.env.APP_ROOT, 'scripts')\n    fs.readdir(scriptPath, (err, files) => {\n      if (err) {\n        console.error('Failed to read scripts directory:', err)\n        return\n      }\n      const pythonFiles = files.filter(file => file.endsWith('.py'))\n      mainMenu?.webContents.send('python-files', pythonFiles)\n    })\n  })\n\n  mainMenu.on('closed', () => {\n    mainMenu = null\n  })\n}\n\nfunction toggleMainMenu() {\n  if (mainMenu) {\n    mainMenu.close()\n  } else {\n    createMainMenu()\n  }\n}\n\nfunction createWindow() {\n  const primaryDisplay = screen.getPrimaryDisplay()\n  const { width, height } = primaryDisplay.size\n\n  win = new BrowserWindow({\n    transparent: true,\n    frame: false,\n    alwaysOnTop: true,\n    resizable: false,\n    type: 'toolbar',\n    webPreferences: {\n      preload: path.join(__dirname, 'preload.mjs'),\n    },\n  })\n\n  win.setBounds({ x: 0, y: 0, width, height })\n\n  // Test active push message to Renderer-process.\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', (new Date).toLocaleString())\n  })\n\n  if (VITE_DEV_SERVER_URL) {\n    win.loadURL(VITE_DEV_SERVER_URL)\n  } else {\n    // win.loadFile('dist/index.html')\n    win.loadFile(path.join(RENDERER_DIST, 'index.html'))\n  }\n\n  win.setIgnoreMouseEvents(true, { forward: true })\n\n  win.on('blur', () => {\n    win?.setAlwaysOnTop(true, 'screen-saver')\n    win?.focus()\n  })\n}\n\nipcMain.on('run-automation', () => {\n  if (!process.env.APP_ROOT) {\n    console.error('APP_ROOT environment variable is not set.');\n    return;\n  }\n  isRunning = true\n  win?.webContents.send('automation-state-changed', isRunning)\n  const scriptPath = path.join(process.env.APP_ROOT, 'scripts', selectedProgram);\n  pyShell = new PythonShell(scriptPath);\n\n  setTimeout(() => {\n    win?.setAlwaysOnTop(true, 'screen-saver');\n  }, 1000);\n\n  pyShell.on('message', (message) => {\n    win?.webContents.send('automation-caption', message);\n  });\n\n  pyShell.end((err) => {\n    if (err) {\n      console.error(err);\n      win?.webContents.send('automation-caption', 'An error occurred.');\n    } else {\n      win?.webContents.send('automation-caption', 'Automation finished.');\n    }\n    pyShell = null;\n    isRunning = false;\n    win?.webContents.send('automation-state-changed', isRunning)\n  });\n});\n\nipcMain.on('stop-automation', () => {\n  if (pyShell) {\n    pyShell.kill();\n    pyShell = null;\n    isRunning = false;\n    win?.webContents.send('automation-state-changed', isRunning)\n    win?.webContents.send('automation-caption', 'Automation stopped.');\n  }\n});\n\nfunction toggleAutomation() {\n  if (isRunning) {\n    ipcMain.emit('stop-automation');\n  } else {\n    ipcMain.emit('run-automation');\n  }\n}\n\napp.on('will-quit', () => {\n  globalShortcut.unregisterAll()\n})\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q. \napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n    win = null\n  }\n})\n\napp.on('activate', () => {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow()\n  }\n})\n\napp.whenReady().then(() => {\n  createWindow()\n  globalShortcut.register('CommandOrControl+Space', toggleAutomation)\n  globalShortcut.register('CommandOrControl+M', toggleMainMenu)\n  globalShortcut.register('CommandOrControl+=', togglePlusWindow)\n})\n"],"names":["this","require$$0","require$$1","require$$2","require$$3","require$$5","self","fs","path","screen","err","base","old","concatMap","minimatch","Minimatch","filter","makeRe","braceExpand","set","inherits_browserModule","inherits","inheritsModule","win32","pathIsAbsoluteModule","m","require$$4","require$$6","common","require$$7","cb","onceModule","once","require$$8","require$$9","require$$11","extend","sync","er","stat","p","made","mkdirp","module","exports","temp","utils","screenshotDesktopModule","EventEmitter","GlobalKeyboardListener","createRequire","__dirname","fileURLToPath","ipcMain","BrowserWindow","PythonShell","app","globalShortcut"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}