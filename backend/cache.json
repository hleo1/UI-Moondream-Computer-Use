[
    "[IMAGES]\n0 The cursor is inside a VS Code editor window, positioned on the word \u201cevent\u201d in a TypeScript/JavaScript function parameter list; the yellow wavy underline is highlighted (likely the next click will take place here).\n1 VS Code editor showing another part of the same file; the variable value \u2018powerpoint.py\u2019 is highlighted \u2013 user probably clicked or is about to click on that text.\n2 VS Code context-menu (\u201cGo to \u2026\u201d) is open on the right side of the editor after the user invoked the symbol navigation menu.\n3 A floating, circular green \u201crecord/stop\u201d button from an Activity-Recorder screen-capture tool is highlighted \u2013 the user is about to press Stop to finish recording the demo.\n\n[CLARIFYING QUESTIONS]\n1. The screenshots only show code editing in VS Code and the recording overlay, not the actual steps for extracting images from a PowerPoint slide deck. Could you supply the screenshots that show the real manual workflow (e.g., opening the .pptx, saving slides as pictures, or renaming the file to .zip and extracting, etc.)?\n2. Which approach do you want automated?\n   a) Using PowerPoint\u2019s \u201cSave As \u2192 PNG/JPEG\u201d feature, or  \n   b) Changing the .pptx extension to .zip and extracting \u201c/ppt/media\u201d images, or  \n   c) Something else?\n3. Will the automation always run on Windows? (Needed to know which hot-keys and Explorer behaviour to script.)\n4. Should each PowerPoint file be processed individually (one output folder per .pptx) or should all images from multiple files be copied into a single common folder?\n5. Where are the source .pptx files stored and where should the resulting image folders be placed (fixed paths, or should the script prompt/browse each time)?\nANSWERS:\n\nFollow my example to the best of your ability."
]